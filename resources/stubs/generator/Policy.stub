<?php

namespace App\Policies\{{namespace}};

use App\Models\Common\User;
use App\Models\{{namespace}}\{{modelName}};
use Illuminate\Auth\Access\HandlesAuthorization;

class {{modelName}}Policy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view the {{modelNameSingularLowerCase}}s.
     *
     * @param  \App\Models\Common\User  $user
     * @return mixed
     */
    public function index(User $user)
    {
        return $user->can('{{routeNamespace}}.read-{{modelNameSingularLowerCase}}');
    }

    /**
     * Determine whether the user can view the {{modelNameSingularLowerCase}}.
     *
     * @param  \App\Models\Common\User  $user
     * @param  \App\Models\{{namespace}}\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return mixed
     */
    public function show(User $user, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        return $user->can('{{routeNamespace}}.read-{{modelNameSingularLowerCase}}');
    }

    /**
     * Determine whether the user can create {{modelNameSingularLowerCase}}s.
     *
     * @param  \App\Models\Common\User  $user
     * @return mixed
     */
    public function create(User $user)
    {
        return $user->can('{{routeNamespace}}.create-{{modelNameSingularLowerCase}}');
    }

    /**
     * Determine whether the user can update the {{modelNameSingularLowerCase}}.
     *
     * @param  \App\Models\Common\User  $user
     * @param  \App\Models\{{namespace}}\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return mixed
     */
    public function update(User $user, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        return $user->can('{{routeNamespace}}.update-{{modelNameSingularLowerCase}}');
    }

    /**
     * Determine whether the user can delete the {{modelNameSingularLowerCase}}.
     *
     * @param  \App\Models\Common\User  $user
     * @param  \App\Models\{{namespace}}\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return mixed
     */
    public function delete(User $user, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        if (!$user->can('{{routeNamespace}}.delete-{{modelNameSingularLowerCase}}')) {
            return false;
        }

        return true;
    }

    /**
     * Determine whether the user can restore the {{modelNameSingularLowerCase}}.
     *
     * @param  \App\Models\Common\User  $user
     * @param  \App\Models\{{namespace}}\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return mixed
     */
    public function restore(User $user, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the {{modelNameSingularLowerCase}}.
     *
     * @param  \App\Models\Common\User  $user
     * @param  \App\Models\{{namespace}}\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return mixed
     */
    public function forceDelete(User $user, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        //
    }
}
